##############################################################################
#
# Copyright (c) 2020 TomskSoft LLC
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# FILE: xss_vulnerability_scanner.py
# Author: Maxim Felchuck
#
##############################################################################
"""
XSS_Vulnerability_Scanner - function to check site on XSS attack Vulnerability:

Usage: XSS_Vulnerability_Scanner <url>

    <url> - url where checking XSS attack Vulnerability
"""
import sys
from urllib.parse import urljoin
import requests
from requests_html import HTMLSession
from find_forms import Forms


class XssVulnerability():
    """
    url - url where checking XSS attack Vulnerability
    """
    def __init__(self, url):
        self.url = url

    def scan(self):
        """
        function to check site on XSS attack vulnerability
        return: True/False
        """
        session = HTMLSession()
        forms = Forms(session, self.url)
        forms = forms.search_forms()
        js_script = "<Script>alert('hi')</scripT>"
        is_vulnerable = False
        if not forms:
            return 0
        for detail in forms.values():
            content = self.submit_form(detail, self.url, js_script).content.decode()
            if js_script in content:
                print(f"\nXSS Detected on {self.url} in form: ")
                print('-------------------------')
                print("Form name: ", detail["name"])
                print("Action: ", detail["action"])
                print("Method: ", detail["method"])
                print("Inputs: ")
                for inputs in detail["inputs"]:
                    print("  " * 3, "-" * 4)
                    print("  " * 3, "Input name: ", inputs["name"])
                    print("  " * 3, "Input type: ", inputs["type"])
                    print("  " * 3, "Input value: ", inputs["value"] if inputs["value"] else "None")
                is_vulnerable = True
            return is_vulnerable

    @staticmethod
    def submit_form(form_details, url, value):
        """
        function to submit a form
        parameters:
            form_details: form details
            url: url
            value: javascript script
            return: request
        """
        target_url = urljoin(url, form_details["action"])
        inputs = form_details["inputs"]
        data = {}
        for item in inputs:
            if item["type"] == "text" or item["type"] == "search":
                item["value"] = value
            input_name = item.get("name")
            input_value = item.get("value")
            if input_name and input_value:
                data[input_name] = input_value

        if form_details["method"] == "post":
            return requests.post(target_url, data=data)
        return requests.get(target_url, params=data)


def main():
    """
    XSS_Vulnerability_Scanner - function to check site on XSS attack Vulnerability:

    Usage: XSS_Vulnerability_Scanner <url>

        <url> - url where checking XSS attack Vulnerability
    """
    if sys.argv[1] == '-h':
        print(__doc__)
        sys.exit(0)
    injection = XssVulnerability(sys.argv[1])
    is_vulnerable = injection.scan()
    if is_vulnerable:
        print(f'\nSite {sys.argv[1]} has an XSS vulnerability')
    else:
        print(f'\nSite {sys.argv[1]} has no XSS vulnerability')


if __name__ == '__main__':
    main()
